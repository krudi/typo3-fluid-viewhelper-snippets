{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "TypoScript",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#includes"
    },
    {
      "include": "#conditions"
    },
    {
      "comment": "Syntax after the equal sign",
      "begin": "(=)(\\s?)",
      "captures": {
        "0": {
          "name": "keyword.operator.assignment.typoscript"
        }
      },
      "end": "(?:\n|$)",
      "name": "string.interpolated.typoscript",
      "patterns": [
        {
          "include": "#cobjects"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#interpolation"
        },
        {
          "include": "#strings"
        }
      ]
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.typoscript",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.typoscript"
            }
          }
        },
        {
          "begin": "//",
          "end": "\\n|(?=\\?>)",
          "name": "comment.line.double-slash.typoscript",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.typoscript"
            }
          }
        },
        {
          "begin": "#",
          "end": "\\n|(?=\\?>)",
          "name": "comment.line.number-sign.typoscript",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.typoscript"
            }
          }
        }
      ]
    },
    "includes": {
      "patterns": [
        {
          "include": "#include_at_rule"
        },
        {
          "include": "#include_tag_rule"
        }
      ]
    },
    "conditions": {
      "patterns": [
        {
          "match": "\\[(adminUser|language|IP|hostname|applicationContext|hour|minute|month|year|dayofweek|dayofmonth|dayofyear|usergroup|loginUser|page|treeLevel|PIDinRootline|PIDupinRootline|compatVersion|globalVar|globalString|global|userFunc|end|((?:\\{1,2}\\w+|\\w+\\\\{1,2})(?:\\w+\\\\{0,2})+)).*\\]",
          "name": "meta.condition.typoscript"
        }
      ]
    },
    "cobjects": {
      "patterns": [
        {
          "match": "(CASE|COA|COA_INT|CONTENT|EDITPANEL|FILE|FILES|FLUIDTEMPLATE|HMENU|TMENU|IMAGE|IMG_RESOURCE|LOAD_REGISTER|RECORDS|RESTORE_REGISTER|SVG|TEMPLATE|TEXT|USER|USER_INT|PAGE)\\b",
          "name": "support.class.cobject.typoscript"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "{\\$.*}",
          "name": "variable.other.constant.typoscript"
        }
      ]
    },
    "interpolation": {
      "patterns": [
        {
          "match": "\\\\[0-7]{1,3}",
          "name": "constant.numeric.octal.typoscript"
        },
        {
          "match": "\\\\x[0-9A-Fa-f]{1,2}",
          "name": "constant.numeric.hex.typoscript"
        },
        {
          "match": "\\\\[enrt\\\\\\$\\\"]",
          "name": "constant.character.escape.typoscript"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "include": "#string-double-quoted"
        },
        {
          "include": "#string-single-quoted"
        }
      ]
    },
    "string-double-quoted": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.typoscript",
      "patterns": [
        {
          "include": "#interpolation"
        }
      ]
    },
    "string-single-quoted": {
      "begin": "'",
      "end": "'",
      "name": "string.quoted.single.typoscript",
      "patterns": [
        {
          "match": "\\\\[\\\\']",
          "name": "constant.character.escape.typoscript"
        }
      ]
    },
    "include_at_rule": {
      "begin": "\\s*@import\\b\\s*",
      "end": "\\s",
      "name": "meta.include.typoscript",
      "captures": {
        "1": {
          "name": "keyword.control.include.typoscript"
        },
        "2": {
          "name": "punctuation.definition.keyword.typoscript"
        }
      },
      "patterns": [
        {
          "include": "#strings"
        }
      ]
    },
    "include_tag_rule": {
      "begin": "<INCLUDE_TYPOSCRIPT:",
      "end": ">",
      "name": "meta.include.tag.typoscript",
      "captures": {
        "0": {
          "name": "support.function.include.start.typoscript"
        }
      },
      "patterns": [
        {
          "match": "(source|extensions|condition)(=)",
          "name": "variable.parameter.include.typoscript"
        },
        {
          "include": "#strings"
        }
      ]
    }
  },
  "scopeName": "source.typoscript"
}
